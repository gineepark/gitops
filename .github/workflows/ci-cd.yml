name: CI/CD

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'
  create:
    tags:
      - v*
  workflow_dispatch:
  repository_dispatch:
    types: [master_push]

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    # - name: Get latest tag
    #   uses: actions-ecosystem/action-get-latest-tag@v1
    #   id: get-latest-tag
    #   if: ${{ steps.release-label.outputs.level != null }}
      # id: previoustag
      # uses: "WyriHaximus/github-action-get-previous-tag@v1"
      # with:
      #   fallback: 1.0.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Build Alarm to Slack
      uses: 8398a7/action-slack@v3.12.0
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 
      if: always() 

  deploy:
    name: CD
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Check out code
      uses: actions/checkout@v2
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1.6.1

    - name: Update Kubernetes resources
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
       cd kustomize/overlays/dev/
       kustomize edit set image $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
       cat kustomization.yaml
        
    - name: Commit files
      run: |
        git config --local user.email ${{ secrets.EMAIL_GITHUB }}
        git config --local user.name ${{ secrets.USERNAME_GITHUB }}
        git commit -am "Bump docker tag"

    - name: Push changes
      uses: ad-m/github-push-action@113
      with:
        github_token: ${{ secrets.TOKEN_GITHUB }}